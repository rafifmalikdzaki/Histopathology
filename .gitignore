# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# data
data/

# =============================================================================
# IMAGES AND LARGE FILES FOR HISTOPATHOLOGY RESEARCH
# =============================================================================

# Common image formats
*.jpg
*.jpeg
*.png
*.tiff
*.tif
*.bmp
*.gif
*.svg
*.webp
*.ico
*.raw
*.cr2
*.nef
*.orf
*.sr2

# Medical and microscopy imaging formats
*.dcm
*.dicom
*.nii
*.nii.gz
*.mha
*.mhd
*.nrrd
*.vtk
*.vti

# Whole slide imaging formats (histopathology specific)
*.ndpi
*.svs
*.scn
*.vms
*.vmu
*.mrxs
*.czi
*.lsm
*.oib
*.oif
*.lei
*.zvi
*.lif
*.qptiff
*.bif

# Large data files
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.npy
*.npz
*.mat
*.parquet
*.feather
*.csv
*.tsv
*.xlsx
*.xls

# Model files and checkpoints
*.pb
*.onnx
*.tflite
*.keras
*.model
*.bin
*.safetensors

# Video and audio files
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv
*.m4v
*.mp3
*.wav
*.flac
*.aac
*.ogg
*.wma

# Dataset and sample directories
datasets/
images/
samples/
raw_data/
processed_data/
annotations/
labels/
masks/
patches/
tiles/
slides/
wsi/

# Results and output directories
results/
outputs/
experiments/
checkpoints/
wandb/
*.wandb

# Large model files (exclude specific patterns)
*.pth
*.pt
*.ckpt
weights/
# Exclude old models backup directory
histopathology/models_old/

# Compressed archives (often large)
*.zip
*.tar
*.tar.gz
*.tar.bz2
*.rar
*.7z
*.gz
*.bz2

# Temporary and backup files
*.tmp
*.temp
*.bak
*.bak2
*.backup
*.old
*.out
*.output

# OS and IDE files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.vscode/
.idea/
*.swp
*.swo
*~

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
.aider*

# Development and test files
test_*.py
*_test.py
test_model.py
test_dimensions.py

# Legacy and alternative implementations
legacy_*.py
minimal_*.py
simplified_*.py
*_old.*

# Tool directories
embedding_tools/
scripts/

# Temporary development files
dae_kan_embedding.py
data_module.py
organize_images.py
list
